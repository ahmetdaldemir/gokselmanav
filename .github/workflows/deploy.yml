name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Build Backend
        run: |
          cd backend
          npm ci
          npm run build

      - name: Copy Frontend dist to server via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 185.209.228.189
          username: root
          password: '@198711Ad@'
          port: 22
          timeout: 60s
          source: "frontend/dist/*"
          target: "/tmp/frontend-dist/"
          strip_components: 1
          debug: true

      - name: Move Frontend Files to Final Directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 185.209.228.189
          username: root
          password: '@198711Ad@'
          port: 22
          timeout: 30s
          command_timeout: 15s
          script: |
            mkdir -p /var/www/html/gokselmanav/frontend/dist
            rm -rf /var/www/html/gokselmanav/frontend/dist/*
            mv /tmp/frontend-dist/* /var/www/html/gokselmanav/frontend/dist/

      - name: Upload Backend Files to Temp
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 185.209.228.189
          username: root
          password: '@198711Ad@'
          port: 22
          timeout: 60s
          source: "backend/dist/*"
          target: /var/www/html/gokselmanav/backend
          strip_components: 1
          debug: true

      - name: Install Backend Dependencies and Start with PM2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 185.209.228.189
          username: root
          password: '@198711Ad@'
          port: 22
          timeout: 60s
          command_timeout: 30s
          script: |
            cd /var/www/html/gokselmanav/backend
            if [ -f "/tmp/package.json" ]; then cp /tmp/package.json package.json; fi
            if [ -f "/tmp/package-lock.json" ]; then cp /tmp/package-lock.json package-lock.json; fi
            curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
            apt-get install -y nodejs
            npm install --omit=dev
            pm2 delete gokselmanav-backend || true
            PORT=3100 pm2 start dist/main.js --name gokselmanav-backend
            docker-compose -f /var/www/html/gokselmanav/docker-compose.prod.yml ps
