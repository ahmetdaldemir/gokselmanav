{
    "sourceFile": "backend/deploy.cjs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1750805459793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750805578702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     await ssh.putFile(path.join(__dirname, 'package-lock.json'), path.join(remotePath, 'package-lock.json'));\r\n     \r\n     // Environment dosyasını yükle\r\n     console.log('🔧 Environment dosyası yükleniyor...');\r\n-    const envContent = `DATABASE_HOST=185.209.228.189\\nDATABASE_PORT=5432\\nDATABASE_USERNAME=postgres\\nDATABASE_PASSWORD=postgres\\nDATABASE_NAME=gokselmanav\\nJWT_SECRET=your-super-secret-jwt-key-change-this-in-production\\nPORT=3100`;\r\n+    const envContent = `DATABASE_HOST=185.209.228.189\\nDATABASE_PORT=5432\\nDATABASE_USERNAME=postgres\\nDATABASE_PASSWORD=postgres\\nDATABASE_NAME=gokselmanav\\nJWT_SECRET=your-super-secret-jwt-key-here\\nPORT=3100`;\r\n     const envPath = path.join(__dirname, '.deploy-tmp.env');\r\n     fs.writeFileSync(envPath, envContent);\r\n     await ssh.putFile(envPath, path.join(remotePath, '.env'));\r\n     fs.unlinkSync(envPath);\r\n"
                }
            ],
            "date": 1750805459793,
            "name": "Commit-0",
            "content": "const { NodeSSH } = require('node-ssh');\r\nconst { execSync } = require('child_process');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nasync function deployBackend() {\r\n  try {\r\n    console.log('🚀 Backend build başlatılıyor...');\r\n    \r\n    // Build işlemi\r\n    execSync('npm run build', { stdio: 'inherit' });\r\n    console.log('✅ Build tamamlandı');\r\n    \r\n    // SSH bağlantısı\r\n    console.log('📤 Dosyalar yükleniyor...');\r\n    const ssh = new NodeSSH();\r\n    \r\n    await ssh.connect({\r\n      host: '185.209.228.189',\r\n      username: 'root',\r\n      password: '@198711Ad@',\r\n      port: 22\r\n    });\r\n    \r\n    // Dist klasörünü yükle\r\n    const localPath = path.join(__dirname, 'dist');\r\n    const remotePath = '/var/www/html/gokselmanav/backend';\r\n    \r\n    console.log(`📁 ${localPath} -> ${remotePath}`);\r\n    \r\n    await ssh.putDirectory(localPath, remotePath, {\r\n      recursive: true,\r\n      concurrency: 10,\r\n      validate: function(itemPath) {\r\n        const baseName = path.basename(itemPath);\r\n        return baseName.substr(0, 1) !== '.' && // exclude hidden files\r\n               baseName !== 'node_modules' && // exclude node_modules\r\n               baseName !== '.git'; // exclude .git\r\n      }\r\n    });\r\n    \r\n    // Package.json dosyalarını yükle\r\n    console.log('📦 Package.json dosyaları yükleniyor...');\r\n    await ssh.putFile(path.join(__dirname, 'package.json'), path.join(remotePath, 'package.json'));\r\n    await ssh.putFile(path.join(__dirname, 'package-lock.json'), path.join(remotePath, 'package-lock.json'));\r\n    \r\n    // Environment dosyasını yükle\r\n    console.log('🔧 Environment dosyası yükleniyor...');\r\n    const envContent = `DATABASE_HOST=185.209.228.189\\nDATABASE_PORT=5432\\nDATABASE_USERNAME=postgres\\nDATABASE_PASSWORD=postgres\\nDATABASE_NAME=gokselmanav\\nJWT_SECRET=your-super-secret-jwt-key-change-this-in-production\\nPORT=3100`;\r\n    const envPath = path.join(__dirname, '.deploy-tmp.env');\r\n    fs.writeFileSync(envPath, envContent);\r\n    await ssh.putFile(envPath, path.join(remotePath, '.env'));\r\n    fs.unlinkSync(envPath);\r\n    \r\n    // Dependencies yükle\r\n    console.log('📦 Dependencies yükleniyor...');\r\n    try {\r\n      await ssh.execCommand('npm install --only=production', { cwd: remotePath });\r\n      console.log('✅ Dependencies yüklendi');\r\n    } catch (depError) {\r\n      console.log('⚠️ Dependencies yükleme hatası:', depError.message);\r\n    }\r\n    \r\n    // PM2 restart\r\n    console.log('🔄 PM2 restart ediliyor...');\r\n    try {\r\n      await ssh.execCommand('cd /var/www/html/gokselmanav/backend && pm2 restart gokselmanav-backend');\r\n      console.log('✅ PM2 restart başarılı');\r\n    } catch (pm2Error) {\r\n      console.log('⚠️ PM2 restart hatası (manuel restart gerekebilir):', pm2Error.message);\r\n    }\r\n    \r\n    ssh.dispose();\r\n    console.log('🎉 Backend deployment tamamlandı!');\r\n    \r\n  } catch (error) {\r\n    console.error('❌ Deployment hatası:', error);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\n// Script çalıştırıldığında deployment başlat\r\nif (require.main === module) {\r\n  deployBackend();\r\n}\r\n\r\nmodule.exports = { deployBackend }; "
        }
    ]
}