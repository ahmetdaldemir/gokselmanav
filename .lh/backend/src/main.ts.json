{
    "sourceFile": "backend/src/main.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1750684462576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750684722008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,16 +7,9 @@\n   const app = await NestFactory.create<NestExpressApplication>(AppModule);\r\n   \r\n   // CORS ayarları\r\n   app.enableCors({\r\n-    origin: (origin, callback) => {\r\n-      const whitelist = (process.env.CORS_ORIGIN || '').split(',');\r\n-      if (!origin || whitelist.indexOf(origin) !== -1) {\r\n-        callback(null, true);\r\n-      } else {\r\n-        callback(new Error('Not allowed by CORS'));\r\n-      }\r\n-    },\r\n+    origin: true,\r\n     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\r\n     allowedHeaders: 'Content-Type, Accept, Authorization',\r\n     credentials: true,\r\n   });\r\n"
                }
            ],
            "date": 1750684462576,
            "name": "Commit-0",
            "content": "import { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app.module';\r\nimport { NestExpressApplication } from '@nestjs/platform-express';\r\nimport { join } from 'path';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create<NestExpressApplication>(AppModule);\r\n  \r\n  // CORS ayarları\r\n  app.enableCors({\r\n    origin: (origin, callback) => {\r\n      const whitelist = (process.env.CORS_ORIGIN || '').split(',');\r\n      if (!origin || whitelist.indexOf(origin) !== -1) {\r\n        callback(null, true);\r\n      } else {\r\n        callback(new Error('Not allowed by CORS'));\r\n      }\r\n    },\r\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\r\n    allowedHeaders: 'Content-Type, Accept, Authorization',\r\n    credentials: true,\r\n  });\r\n\r\n  // Static file serving\r\n  app.useStaticAssets(join(__dirname, '..', 'uploads'), {\r\n    prefix: '/uploads/',\r\n  });\r\n\r\n  await app.listen(process.env.PORT ?? 3100);\r\n}\r\nbootstrap();\r\n"
        }
    ]
}