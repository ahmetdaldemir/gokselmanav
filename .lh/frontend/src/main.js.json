{
    "sourceFile": "frontend/src/main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1750683387736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750684208934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n import { createPinia } from 'pinia'\r\n import App from './App.vue'\r\n import router from './router'\r\n import axios from 'axios'\r\n-import { useAuthStore } from './stores/auth'\r\n \r\n const vuetify = createVuetify({\r\n   components,\r\n   directives,\r\n@@ -37,10 +36,9 @@\n // Bu kod parçası, her bir axios isteğinden önce araya girer.\r\n // Auth store'dan token'ı alır ve isteğin 'Authorization' başlığına ekler.\r\n // Böylece backend, isteği yapan kullanıcının kimliğini doğrulayabilir.\r\n axios.interceptors.request.use(config => {\r\n-  const authStore = useAuthStore()\r\n-  const token = authStore.token\r\n+  const token = localStorage.getItem('token');\r\n   if (token) {\r\n     config.headers.Authorization = `Bearer ${token}`\r\n   }\r\n   return config\r\n"
                }
            ],
            "date": 1750683387736,
            "name": "Commit-0",
            "content": "import './assets/main.css'\r\nimport 'vuetify/styles'\r\nimport '@mdi/font/css/materialdesignicons.css'\r\n\r\nimport { createApp } from 'vue'\r\nimport { createVuetify } from 'vuetify'\r\nimport * as components from 'vuetify/components'\r\nimport * as directives from 'vuetify/directives'\r\nimport { createHead } from '@vueuse/head'\r\nimport { createPinia } from 'pinia'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport axios from 'axios'\r\nimport { useAuthStore } from './stores/auth'\r\n\r\nconst vuetify = createVuetify({\r\n  components,\r\n  directives,\r\n  theme: {\r\n    defaultTheme: 'light',\r\n    themes: {\r\n      light: {\r\n        colors: {\r\n          primary: '#1867C0',\r\n          secondary: '#5CBBF6',\r\n        },\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nconst app = createApp(App)\r\nconst pinia = createPinia()\r\napp.use(pinia)\r\n\r\n// Axios Interceptor\r\n// Bu kod parçası, her bir axios isteğinden önce araya girer.\r\n// Auth store'dan token'ı alır ve isteğin 'Authorization' başlığına ekler.\r\n// Böylece backend, isteği yapan kullanıcının kimliğini doğrulayabilir.\r\naxios.interceptors.request.use(config => {\r\n  const authStore = useAuthStore()\r\n  const token = authStore.token\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`\r\n  }\r\n  return config\r\n})\r\n\r\napp.use(router)\r\napp.use(vuetify)\r\napp.use(createHead())\r\napp.mount('#app')\r\n"
        }
    ]
}