{
    "sourceFile": "frontend/src/views/HomeView.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1750614688199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750614776375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,11 @@\n   <div class=\"starbucks-page\">\r\n     <!-- Üst: Restoran Bilgi ve Slider Alanı -->\r\n     <div class=\"restaurant-header d-none d-md-block\">\r\n       <div class=\"restaurant-info\">\r\n-        <img class=\"restaurant-logo\" src=\"/logogoksel.png\" alt=\"Goksel Manav\" />\r\n+        <img class=\"restaurant-logo\" src=\"/logogoksel.png\" alt=\"Goksel Manav\" @click=\"goToHome\" />\r\n         <div class=\"restaurant-meta\">\r\n-          <h1>GOKSEL MANAV</h1>\r\n+          <h1 @click=\"goToHome\">GOKSEL MANAV</h1>\r\n           <div class=\"restaurant-details\">\r\n             <span class=\"delivery\">TESLİMAT</span>\r\n             <span class=\"delivery-info\">18,99 TL teslimat ücreti <b>500 TL sepete ücretsiz teslimat</b></span>\r\n             <span class=\"min-order\">Min. sepet tutarı 100 TL</span>\r\n@@ -222,8 +222,13 @@\n   }\r\n   \r\n   return cleanText;\r\n }\r\n+\r\n+const goToHome = () => {\r\n+  // Implement the logic to navigate to the home page using Vue Router\r\n+  console.log('Navigating to home page');\r\n+}\r\n </script>\r\n \r\n <style scoped>\r\n .starbucks-page {\r\n"
                },
                {
                    "date": 1750614782373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,11 +96,13 @@\n </template>\r\n \r\n <script setup lang=\"ts\">\r\n import { ref, computed, onMounted, watch } from 'vue'\r\n+import { useRouter } from 'vue-router'\r\n import axios from 'axios'\r\n import { useCartStore } from '@/stores/cart'\r\n \r\n+const router = useRouter()\r\n const cart = useCartStore()\r\n \r\n const products = ref<any[]>([])\r\n const categories = ref<any[]>([])\r\n@@ -224,10 +226,9 @@\n   return cleanText;\r\n }\r\n \r\n const goToHome = () => {\r\n-  // Implement the logic to navigate to the home page using Vue Router\r\n-  console.log('Navigating to home page');\r\n+  router.push('/')\r\n }\r\n </script>\r\n \r\n <style scoped>\r\n"
                },
                {
                    "date": 1750614788416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,14 +253,24 @@\n   border-radius: 16px;\r\n   background: #fff;\r\n   object-fit: contain;\r\n   border: 1px solid #eee;\r\n+  cursor: pointer;\r\n+  transition: transform 0.2s ease;\r\n }\r\n+.restaurant-logo:hover {\r\n+  transform: scale(1.05);\r\n+}\r\n .restaurant-meta h1 {\r\n   font-size: 2.1rem;\r\n   font-weight: 700;\r\n   margin-bottom: 0.5rem;\r\n+  cursor: pointer;\r\n+  transition: color 0.2s ease;\r\n }\r\n+.restaurant-meta h1:hover {\r\n+  color: #e52929;\r\n+}\r\n .restaurant-details {\r\n   color: #444;\r\n   font-size: 1rem;\r\n   margin-bottom: 0.3rem;\r\n"
                },
                {
                    "date": 1750615061696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,15 +17,8 @@\n             <span class=\"about\">Hakkında</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n-      <div class=\"slider-area\">\r\n-        <div class=\"slider-track\">\r\n-          <div v-for=\"(img, i) in slideImages\" :key=\"i\" class=\"slider-item\">\r\n-            <img :src=\"img\" alt=\"Ürün görseli\" />\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n     </div>\r\n \r\n     <!-- Menüde Ara ve Tab Menü -->\r\n     <div class=\"menu-tabs-bar\">\r\n"
                },
                {
                    "date": 1750615066963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,15 +132,8 @@\n const selectCategory = (categoryId: number) => {\r\n   selectedCategoryId.value = categoryId\r\n }\r\n \r\n-const slideImages = computed(() => {\r\n-  if (!products.value || !Array.isArray(products.value)) {\r\n-    return []\r\n-  }\r\n-  return products.value.map(p => p.image).filter(Boolean)\r\n-})\r\n-\r\n const filteredProducts = computed(() => {\r\n   if (!products.value || !Array.isArray(products.value)) {\r\n     return []\r\n   }\r\n"
                },
                {
                    "date": 1750615087166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,35 +290,8 @@\n   cursor: pointer;\r\n   text-decoration: underline;\r\n   font-size: 0.98rem;\r\n }\r\n-.slider-area {\r\n-  flex: 1;\r\n-  min-width: 200px;\r\n-  max-width: 350px;\r\n-  height: 38px;\r\n-  display: flex;\r\n-  align-items: center;\r\n-  overflow: hidden;\r\n-  border-radius: 12px;\r\n-  background: #f7f7f7;\r\n-  box-shadow: 0 1px 4px rgba(0,0,0,0.04);\r\n-}\r\n-.slider-track {\r\n-  display: flex;\r\n-  animation: slide-left 12s linear infinite;\r\n-  gap: 1.5rem;\r\n-}\r\n-.slider-item img {\r\n-  height: 36px;\r\n-  width: auto;\r\n-  border-radius: 8px;\r\n-  object-fit: cover;\r\n-}\r\n-@keyframes slide-left {\r\n-  0% { transform: translateX(0); }\r\n-  100% { transform: translateX(-60%); }\r\n-}\r\n .menu-tabs-bar {\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n@@ -434,12 +407,8 @@\n     flex-direction: column;\r\n     align-items: flex-start;\r\n     gap: 1rem;\r\n   }\r\n-  .slider-area {\r\n-    max-width: 100%;\r\n-    width: 100%;\r\n-  }\r\n   .menu-tabs-bar {\r\n     flex-direction: column;\r\n     gap: 1rem;\r\n   }\r\n"
                },
                {
                    "date": 1750615102654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,465 @@\n+<template>\r\n+  <div class=\"starbucks-page\">\r\n+    <!-- Üst: Restoran Bilgi Alanı -->\r\n+    <div class=\"restaurant-header d-none d-md-block\">\r\n+      <div class=\"restaurant-info\">\r\n+        <img class=\"restaurant-logo\" src=\"/logogoksel.png\" alt=\"Goksel Manav\" @click=\"goToHome\" />\r\n+        <div class=\"restaurant-meta\">\r\n+          <h1 @click=\"goToHome\">GOKSEL MANAV</h1>\r\n+          <div class=\"restaurant-details\">\r\n+            <span class=\"delivery\">TESLİMAT</span>\r\n+            <span class=\"delivery-info\">18,99 TL teslimat ücreti <b>500 TL sepete ücretsiz teslimat</b></span>\r\n+            <span class=\"min-order\">Min. sepet tutarı 100 TL</span>\r\n+          </div>\r\n+          <div class=\"restaurant-rating\">\r\n+            <span class=\"star\">★</span> 4.95 (1000+)\r\n+            <span class=\"reviews\">Yorumları Gör</span>\r\n+            <span class=\"about\">Hakkında</span>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+\r\n+    <!-- Menüde Ara ve Tab Menü -->\r\n+    <div class=\"menu-tabs-bar\">\r\n+      <input type=\"text\" v-model=\"search\" class=\"menu-search\" placeholder=\"Menüde Ara\" />\r\n+      <div class=\"menu-tabs\">\r\n+        <div\r\n+          v-for=\"category in categories\"\r\n+          :key=\"category.id\"\r\n+          :class=\"['menu-tab', { active: selectedCategoryId === category.id }]\"\r\n+          @click=\"selectCategory(category.id)\"\r\n+        >\r\n+          {{ category.name }}\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+\r\n+    <!-- Ürün Listesi -->\r\n+    <div class=\"products-list\">\r\n+      <div\r\n+        v-for=\"product in paginatedProducts\"\r\n+        :key=\"product.id\"\r\n+        class=\"product-row\"\r\n+      >\r\n+        <div class=\"product-info\">\r\n+          <div class=\"product-title\">{{ product.name }}</div>\r\n+          <div class=\"product-price\">{{ product.price.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }) }}</div>\r\n+          <div class=\"product-desc\">{{ cleanDescription(product.description) }}</div>\r\n+        </div>\r\n+        <div class=\"product-right\">\r\n+          <img :src=\"product.image\" :alt=\"product.name\" class=\"product-img\" />\r\n+          <button class=\"add-btn\" @click=\"addToCart(product)\">\r\n+            <span>+</span>\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+\r\n+    <!-- Sayfalama -->\r\n+    <div v-if=\"totalPages > 1\" class=\"pagination\">\r\n+      <button \r\n+        class=\"page-btn\" \r\n+        :disabled=\"currentPage === 1\"\r\n+        @click=\"currentPage = currentPage - 1\"\r\n+      >\r\n+        ← Önceki\r\n+      </button>\r\n+      \r\n+      <div class=\"page-numbers\">\r\n+        <button \r\n+          v-for=\"page in visiblePages\" \r\n+          :key=\"page\"\r\n+          :class=\"['page-number', { active: page === currentPage }]\"\r\n+          @click=\"currentPage = page\"\r\n+        >\r\n+          {{ page }}\r\n+        </button>\r\n+      </div>\r\n+      \r\n+      <button \r\n+        class=\"page-btn\" \r\n+        :disabled=\"currentPage === totalPages\"\r\n+        @click=\"currentPage = currentPage + 1\"\r\n+      >\r\n+        Sonraki →\r\n+      </button>\r\n+    </div>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script setup lang=\"ts\">\r\n+import { ref, computed, onMounted, watch } from 'vue'\r\n+import { useRouter } from 'vue-router'\r\n+import axios from 'axios'\r\n+import { useCartStore } from '@/stores/cart'\r\n+\r\n+const router = useRouter()\r\n+const cart = useCartStore()\r\n+\r\n+const products = ref<any[]>([])\r\n+const categories = ref<any[]>([])\r\n+const selectedCategoryId = ref<number | null>(null)\r\n+const search = ref('')\r\n+const currentPage = ref(1)\r\n+const itemsPerPage = 12\r\n+\r\n+// Kategori veya arama değiştiğinde sayfa numarasını sıfırla\r\n+watch([selectedCategoryId, search], () => {\r\n+  currentPage.value = 1\r\n+})\r\n+\r\n+onMounted(async () => {\r\n+  try {\r\n+    // Ürünleri ve kategorileri paralel olarak yükle\r\n+    const [productsResponse, categoriesResponse] = await Promise.all([\r\n+      axios.get('/backend/products'),\r\n+      axios.get('/backend/categories/main')\r\n+    ])\r\n+    \r\n+    products.value = productsResponse.data\r\n+    categories.value = categoriesResponse.data\r\n+    \r\n+    // İlk kategoriyi seç\r\n+    if (categories.value.length > 0) {\r\n+      selectedCategoryId.value = categories.value[0].id\r\n+    }\r\n+  } catch (error) {\r\n+    console.error('Veriler alınamadı:', error)\r\n+  }\r\n+})\r\n+\r\n+const selectCategory = (categoryId: number) => {\r\n+  selectedCategoryId.value = categoryId\r\n+}\r\n+\r\n+const filteredProducts = computed(() => {\r\n+  if (!products.value || !Array.isArray(products.value)) {\r\n+    return []\r\n+  }\r\n+  \r\n+  let filtered = products.value\r\n+  \r\n+  // Kategori filtresi\r\n+  if (selectedCategoryId.value) {\r\n+    filtered = filtered.filter(p => p.categoryId === selectedCategoryId.value)\r\n+  }\r\n+  \r\n+  // Arama filtresi\r\n+  if (search.value) {\r\n+    const searchLower = search.value.toLowerCase()\r\n+    filtered = filtered.filter(p => \r\n+      p.name.toLowerCase().includes(searchLower) || \r\n+      p.description.toLowerCase().includes(searchLower)\r\n+    )\r\n+  }\r\n+  \r\n+  return filtered\r\n+})\r\n+\r\n+const totalPages = computed(() => {\r\n+  return Math.ceil(filteredProducts.value.length / itemsPerPage)\r\n+})\r\n+\r\n+const visiblePages = computed(() => {\r\n+  const pages = []\r\n+  const maxVisible = 5\r\n+  const start = Math.max(1, currentPage.value - Math.floor(maxVisible / 2))\r\n+  const end = Math.min(totalPages.value, start + maxVisible - 1)\r\n+  \r\n+  for (let i = start; i <= end; i++) {\r\n+    pages.push(i)\r\n+  }\r\n+  return pages\r\n+})\r\n+\r\n+const paginatedProducts = computed(() => {\r\n+  if (!filteredProducts.value || !Array.isArray(filteredProducts.value)) {\r\n+    return []\r\n+  }\r\n+  const start = (currentPage.value - 1) * itemsPerPage\r\n+  const end = start + itemsPerPage\r\n+  return filteredProducts.value.slice(start, end)\r\n+})\r\n+\r\n+const addToCart = (product: any) => {\r\n+  cart.addToCart(product)\r\n+}\r\n+\r\n+const cleanDescription = (description: string) => {\r\n+  if (!description) return '';\r\n+  \r\n+  // HTML tag'lerini kaldır\r\n+  let cleanText = description.replace(/<[^>]*>/g, '');\r\n+  \r\n+  // HTML karakterlerini decode et\r\n+  cleanText = cleanText\r\n+    .replace(/&nbsp;/g, ' ')\r\n+    .replace(/&amp;/g, '&')\r\n+    .replace(/&lt;/g, '<')\r\n+    .replace(/&gt;/g, '>')\r\n+    .replace(/&quot;/g, '\"')\r\n+    .replace(/&#39;/g, \"'\");\r\n+  \r\n+  // Fazla boşlukları temizle\r\n+  cleanText = cleanText.replace(/\\s+/g, ' ').trim();\r\n+  \r\n+  // İlk 120 karakteri al ve \"...\" ekle\r\n+  if (cleanText.length > 120) {\r\n+    cleanText = cleanText.substring(0, 120) + '...';\r\n+  }\r\n+  \r\n+  return cleanText;\r\n+}\r\n+\r\n+const goToHome = () => {\r\n+  router.push('/')\r\n+}\r\n+</script>\r\n+\r\n+<style scoped>\r\n+.starbucks-page {\r\n+  margin: 0 auto;\r\n+  padding: 2rem 1rem 3rem 1rem;\r\n+}\r\n+.restaurant-header {\r\n+  display: flex;\r\n+  align-items: flex-start;\r\n+  gap: 2rem;\r\n+  margin-bottom: 1.5rem;\r\n+}\r\n+.restaurant-info {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 1.5rem;\r\n+}\r\n+.restaurant-logo {\r\n+  width: 90px;\r\n+  height: 90px;\r\n+  border-radius: 16px;\r\n+  background: #fff;\r\n+  object-fit: contain;\r\n+  border: 1px solid #eee;\r\n+  cursor: pointer;\r\n+  transition: transform 0.2s ease;\r\n+}\r\n+.restaurant-logo:hover {\r\n+  transform: scale(1.05);\r\n+}\r\n+.restaurant-meta h1 {\r\n+  font-size: 2.1rem;\r\n+  font-weight: 700;\r\n+  margin-bottom: 0.5rem;\r\n+  cursor: pointer;\r\n+  transition: color 0.2s ease;\r\n+}\r\n+.restaurant-meta h1:hover {\r\n+  color: #e52929;\r\n+}\r\n+.restaurant-details {\r\n+  color: #444;\r\n+  font-size: 1rem;\r\n+  margin-bottom: 0.3rem;\r\n+}\r\n+.delivery {\r\n+  color: #e52929;\r\n+  font-weight: 600;\r\n+  margin-right: 0.7rem;\r\n+}\r\n+.delivery-info {\r\n+  color: #e52929;\r\n+  font-weight: 500;\r\n+  margin-right: 0.7rem;\r\n+}\r\n+.min-order {\r\n+  color: #888;\r\n+}\r\n+.restaurant-rating {\r\n+  color: #e52929;\r\n+  font-size: 1rem;\r\n+  margin-top: 0.2rem;\r\n+}\r\n+.restaurant-rating .star {\r\n+  color: #f7b500;\r\n+  font-size: 1.1rem;\r\n+  margin-right: 0.2rem;\r\n+}\r\n+.restaurant-rating .reviews, .restaurant-rating .about {\r\n+  color: #444;\r\n+  margin-left: 1.2rem;\r\n+  cursor: pointer;\r\n+  text-decoration: underline;\r\n+  font-size: 0.98rem;\r\n+}\r\n+.menu-tabs-bar {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: center;\r\n+  gap: 2rem;\r\n+  margin-bottom: 1.5rem;\r\n+}\r\n+.menu-search {\r\n+  padding: 0.7rem 1.2rem;\r\n+  border: 1px solid #ddd;\r\n+  border-radius: 8px;\r\n+  font-size: 1rem;\r\n+  min-width: 220px;\r\n+}\r\n+.menu-tabs {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 0.5rem;\r\n+}\r\n+.menu-tab {\r\n+  padding: 0.7rem 1.3rem;\r\n+  border-radius: 20px;\r\n+  background: #f7f7f7;\r\n+  color: #444;\r\n+  font-weight: 500;\r\n+  cursor: pointer;\r\n+  transition: background 0.2s, color 0.2s;\r\n+  font-size: 1rem;\r\n+}\r\n+.menu-tab.active {\r\n+  background: #e52929;\r\n+  color: #fff;\r\n+}\r\n+.products-list {\r\n+  display: grid;\r\n+  grid-template-columns: repeat(3, 1fr);\r\n+  gap: 1.2rem;\r\n+}\r\n+@media (max-width: 1100px) {\r\n+  .products-list {\r\n+    grid-template-columns: repeat(2, 1fr);\r\n+  }\r\n+}\r\n+@media (max-width: 700px) {\r\n+  .products-list {\r\n+    grid-template-columns: 1fr;\r\n+  }\r\n+}\r\n+.product-row {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: space-between;\r\n+  background: #fff;\r\n+  border-radius: 14px;\r\n+  box-shadow: 0 1px 4px rgba(0,0,0,0.04);\r\n+  padding: 1.2rem 1.5rem;\r\n+  gap: 1.5rem;\r\n+  min-width: 0;\r\n+}\r\n+.product-info {\r\n+  flex: 1;\r\n+  min-width: 0;\r\n+}\r\n+.product-title {\r\n+  font-size: 1.1rem;\r\n+  font-weight: 600;\r\n+  margin-bottom: 0.2rem;\r\n+}\r\n+.product-price {\r\n+  color: #e52929;\r\n+  font-weight: 700;\r\n+  margin-bottom: 0.3rem;\r\n+}\r\n+.product-desc {\r\n+  color: #666;\r\n+  font-size: 0.95rem;\r\n+  margin-bottom: 0.5rem;\r\n+}\r\n+.product-right {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 1rem;\r\n+}\r\n+.product-img {\r\n+  width: 64px;\r\n+  height: 64px;\r\n+  border-radius: 10px;\r\n+  object-fit: cover;\r\n+  background: #eee;\r\n+}\r\n+.add-btn {\r\n+  background: #fff;\r\n+  border: 2px solid #e52929;\r\n+  color: #e52929;\r\n+  border-radius: 50%;\r\n+  width: 38px;\r\n+  height: 38px;\r\n+  font-size: 1.5rem;\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: center;\r\n+  cursor: pointer;\r\n+  transition: background 0.2s, color 0.2s;\r\n+}\r\n+.add-btn:hover {\r\n+  background: #e52929;\r\n+  color: #fff;\r\n+}\r\n+@media (max-width: 900px) {\r\n+  .starbucks-page {\r\n+    padding: 1rem 0.2rem 2rem 0.2rem;\r\n+  }\r\n+  .restaurant-header {\r\n+    flex-direction: column;\r\n+    align-items: flex-start;\r\n+    gap: 1rem;\r\n+  }\r\n+  .menu-tabs-bar {\r\n+    flex-direction: column;\r\n+    gap: 1rem;\r\n+  }\r\n+  .product-row {\r\n+    flex-direction: column;\r\n+    align-items: flex-start;\r\n+    gap: 1rem;\r\n+    padding: 1rem;\r\n+  }\r\n+  .product-right {\r\n+    align-self: flex-end;\r\n+  }\r\n+}\r\n+.pagination {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: center;\r\n+  gap: 1rem;\r\n+  margin-top: 1.5rem;\r\n+}\r\n+.page-btn {\r\n+  padding: 0.7rem 1.2rem;\r\n+  border: 1px solid #ddd;\r\n+  border-radius: 8px;\r\n+  background: #fff;\r\n+  color: #444;\r\n+  font-weight: 500;\r\n+  cursor: pointer;\r\n+  transition: background 0.2s, color 0.2s;\r\n+}\r\n+.page-btn:hover {\r\n+  background: #e52929;\r\n+  color: #fff;\r\n+}\r\n+.page-numbers {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 0.5rem;\r\n+}\r\n+.page-number {\r\n+  padding: 0.7rem 1.2rem;\r\n+  border: 1px solid #ddd;\r\n+  border-radius: 8px;\r\n+  background: #fff;\r\n+  color: #444;\r\n+  font-weight: 500;\r\n+  cursor: pointer;\r\n+  transition: background 0.2s, color 0.2s;\r\n+}\r\n+.page-number.active {\r\n+  background: #e52929;\r\n+  color: #fff;\r\n+}\r\n+</style> \n\\ No newline at end of file\n"
                },
                {
                    "date": 1750636594400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n             <span class=\"min-order\">Min. sepet tutarı 100 TL</span>\r\n           </div>\r\n           <div class=\"restaurant-rating\">\r\n             <span class=\"star\">★</span> 4.95 (1000+)\r\n-            <span class=\"reviews\">Yorumları Gör</span>\r\n+            <span class=\"reviews\" @click=\"openCommentsModal\">Yorumları Gör</span>\r\n             <span class=\"about\">Hakkında</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n@@ -214,473 +214,13 @@\n \r\n const goToHome = () => {\r\n   router.push('/')\r\n }\r\n-</script>\r\n \r\n-<style scoped>\r\n-.starbucks-page {\r\n-  margin: 0 auto;\r\n-  padding: 2rem 1rem 3rem 1rem;\r\n+const openCommentsModal = () => {\r\n+  // Implement the logic to open the comments modal\r\n+  console.log('Yorumları Gör clicked')\r\n }\r\n-.restaurant-header {\r\n-  display: flex;\r\n-  align-items: flex-start;\r\n-  gap: 2rem;\r\n-  margin-bottom: 1.5rem;\r\n-}\r\n-.restaurant-info {\r\n-  display: flex;\r\n-  align-items: center;\r\n-  gap: 1.5rem;\r\n-}\r\n-.restaurant-logo {\r\n-  width: 90px;\r\n-  height: 90px;\r\n-  border-radius: 16px;\r\n-  background: #fff;\r\n-  object-fit: contain;\r\n-  border: 1px solid #eee;\r\n-  cursor: pointer;\r\n-  transition: transform 0.2s ease;\r\n-}\r\n-.restaurant-logo:hover {\r\n-  transform: scale(1.05);\r\n-}\r\n-.restaurant-meta h1 {\r\n-  font-size: 2.1rem;\r\n-  font-weight: 700;\r\n-  margin-bottom: 0.5rem;\r\n-  cursor: pointer;\r\n-  transition: color 0.2s ease;\r\n-}\r\n-.restaurant-meta h1:hover {\r\n-  color: #e52929;\r\n-}\r\n-.restaurant-details {\r\n-  color: #444;\r\n-  font-size: 1rem;\r\n-  margin-bottom: 0.3rem;\r\n-}\r\n-.delivery {\r\n-  color: #e52929;\r\n-  font-weight: 600;\r\n-  margin-right: 0.7rem;\r\n-}\r\n-.delivery-info {\r\n-  color: #e52929;\r\n-  font-weight: 500;\r\n-  margin-right: 0.7rem;\r\n-}\r\n-.min-order {\r\n-  color: #888;\r\n-}\r\n-.restaurant-rating {\r\n-  color: #e52929;\r\n-  font-size: 1rem;\r\n-  margin-top: 0.2rem;\r\n-}\r\n-.restaurant-rating .star {\r\n-  color: #f7b500;\r\n-  font-size: 1.1rem;\r\n-  margin-right: 0.2rem;\r\n-}\r\n-.restaurant-rating .reviews, .restaurant-rating .about {\r\n-  color: #444;\r\n-  margin-left: 1.2rem;\r\n-  cursor: pointer;\r\n-  text-decoration: underline;\r\n-  font-size: 0.98rem;\r\n-}\r\n-.menu-tabs-bar {\r\n-  display: flex;\r\n-  align-items: center;\r\n-  justify-content: center;\r\n-  gap: 2rem;\r\n-  margin-bottom: 1.5rem;\r\n-}\r\n-.menu-search {\r\n-  padding: 0.7rem 1.2rem;\r\n-  border: 1px solid #ddd;\r\n-  border-radius: 8px;\r\n-  font-size: 1rem;\r\n-  min-width: 220px;\r\n-}\r\n-.menu-tabs {\r\n-  display: flex;\r\n-  align-items: center;\r\n-  gap: 0.5rem;\r\n-}\r\n-.menu-tab {\r\n-  padding: 0.7rem 1.3rem;\r\n-  border-radius: 20px;\r\n-  background: #f7f7f7;\r\n-  color: #444;\r\n-  font-weight: 500;\r\n-  cursor: pointer;\r\n-  transition: background 0.2s, color 0.2s;\r\n-  font-size: 1rem;\r\n-}\r\n-.menu-tab.active {\r\n-  background: #e52929;\r\n-  color: #fff;\r\n-}\r\n-.products-list {\r\n-  display: grid;\r\n-  grid-template-columns: repeat(3, 1fr);\r\n-  gap: 1.2rem;\r\n-}\r\n-@media (max-width: 1100px) {\r\n-  .products-list {\r\n-    grid-template-columns: repeat(2, 1fr);\r\n-  }\r\n-}\r\n-@media (max-width: 700px) {\r\n-  .products-list {\r\n-    grid-template-columns: 1fr;\r\n-  }\r\n-}\r\n-.product-row {\r\n-  display: flex;\r\n-  align-items: center;\r\n-  justify-content: space-between;\r\n-  background: #fff;\r\n-  border-radius: 14px;\r\n-  box-shadow: 0 1px 4px rgba(0,0,0,0.04);\r\n-  padding: 1.2rem 1.5rem;\r\n-  gap: 1.5rem;\r\n-  min-width: 0;\r\n-}\r\n-.product-info {\r\n-  flex: 1;\r\n-  min-width: 0;\r\n-}\r\n-.product-title {\r\n-  font-size: 1.1rem;\r\n-  font-weight: 600;\r\n-  margin-bottom: 0.2rem;\r\n-}\r\n-.product-price {\r\n-  color: #e52929;\r\n-  font-weight: 700;\r\n-  margin-bottom: 0.3rem;\r\n-}\r\n-.product-desc {\r\n-  color: #666;\r\n-  font-size: 0.95rem;\r\n-  margin-bottom: 0.5rem;\r\n-}\r\n-.product-right {\r\n-  display: flex;\r\n-  align-items: center;\r\n-  gap: 1rem;\r\n-}\r\n-.product-img {\r\n-  width: 64px;\r\n-  height: 64px;\r\n-  border-radius: 10px;\r\n-  object-fit: cover;\r\n-  background: #eee;\r\n-}\r\n-.add-btn {\r\n-  background: #fff;\r\n-  border: 2px solid #e52929;\r\n-  color: #e52929;\r\n-  border-radius: 50%;\r\n-  width: 38px;\r\n-  height: 38px;\r\n-  font-size: 1.5rem;\r\n-  display: flex;\r\n-  align-items: center;\r\n-  justify-content: center;\r\n-  cursor: pointer;\r\n-  transition: background 0.2s, color 0.2s;\r\n-}\r\n-.add-btn:hover {\r\n-  background: #e52929;\r\n-  color: #fff;\r\n-}\r\n-@media (max-width: 900px) {\r\n-  .starbucks-page {\r\n-    padding: 1rem 0.2rem 2rem 0.2rem;\r\n-  }\r\n-  .restaurant-header {\r\n-    flex-direction: column;\r\n-    align-items: flex-start;\r\n-    gap: 1rem;\r\n-  }\r\n-  .menu-tabs-bar {\r\n-    flex-direction: column;\r\n-    gap: 1rem;\r\n-  }\r\n-  .product-row {\r\n-    flex-direction: column;\r\n-    align-items: flex-start;\r\n-    gap: 1rem;\r\n-    padding: 1rem;\r\n-  }\r\n-  .product-right {\r\n-    align-self: flex-end;\r\n-  }\r\n-}\r\n-.pagination {\r\n-  display: flex;\r\n-  align-items: center;\r\n-  justify-content: center;\r\n-  gap: 1rem;\r\n-  margin-top: 1.5rem;\r\n-}\r\n-.page-btn {\r\n-  padding: 0.7rem 1.2rem;\r\n-  border: 1px solid #ddd;\r\n-  border-radius: 8px;\r\n-  background: #fff;\r\n-  color: #444;\r\n-  font-weight: 500;\r\n-  cursor: pointer;\r\n-  transition: background 0.2s, color 0.2s;\r\n-}\r\n-.page-btn:hover {\r\n-  background: #e52929;\r\n-  color: #fff;\r\n-}\r\n-.page-numbers {\r\n-  display: flex;\r\n-  align-items: center;\r\n-  gap: 0.5rem;\r\n-}\r\n-.page-number {\r\n-  padding: 0.7rem 1.2rem;\r\n-  border: 1px solid #ddd;\r\n-  border-radius: 8px;\r\n-  background: #fff;\r\n-  color: #444;\r\n-  font-weight: 500;\r\n-  cursor: pointer;\r\n-  transition: background 0.2s, color 0.2s;\r\n-}\r\n-.page-number.active {\r\n-  background: #e52929;\r\n-  color: #fff;\r\n-}\r\n-</style> \n-<template>\r\n-  <div class=\"starbucks-page\">\r\n-    <!-- Üst: Restoran Bilgi ve Slider Alanı -->\r\n-    <div class=\"restaurant-header d-none d-md-block\">\r\n-      <div class=\"restaurant-info\">\r\n-        <img class=\"restaurant-logo\" src=\"/logogoksel.png\" alt=\"Goksel Manav\" @click=\"goToHome\" />\r\n-        <div class=\"restaurant-meta\">\r\n-          <h1 @click=\"goToHome\">GOKSEL MANAV</h1>\r\n-          <div class=\"restaurant-details\">\r\n-            <span class=\"delivery\">TESLİMAT</span>\r\n-            <span class=\"delivery-info\">18,99 TL teslimat ücreti <b>500 TL sepete ücretsiz teslimat</b></span>\r\n-            <span class=\"min-order\">Min. sepet tutarı 100 TL</span>\r\n-          </div>\r\n-          <div class=\"restaurant-rating\">\r\n-            <span class=\"star\">★</span> 4.95 (1000+)\r\n-            <span class=\"reviews\">Yorumları Gör</span>\r\n-            <span class=\"about\">Hakkında</span>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-\r\n-    <!-- Menüde Ara ve Tab Menü -->\r\n-    <div class=\"menu-tabs-bar\">\r\n-      <input type=\"text\" v-model=\"search\" class=\"menu-search\" placeholder=\"Menüde Ara\" />\r\n-      <div class=\"menu-tabs\">\r\n-        <div\r\n-          v-for=\"category in categories\"\r\n-          :key=\"category.id\"\r\n-          :class=\"['menu-tab', { active: selectedCategoryId === category.id }]\"\r\n-          @click=\"selectCategory(category.id)\"\r\n-        >\r\n-          {{ category.name }}\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-\r\n-    <!-- Ürün Listesi -->\r\n-    <div class=\"products-list\">\r\n-      <div\r\n-        v-for=\"product in paginatedProducts\"\r\n-        :key=\"product.id\"\r\n-        class=\"product-row\"\r\n-      >\r\n-        <div class=\"product-info\">\r\n-          <div class=\"product-title\">{{ product.name }}</div>\r\n-          <div class=\"product-price\">{{ product.price.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }) }}</div>\r\n-          <div class=\"product-desc\">{{ cleanDescription(product.description) }}</div>\r\n-        </div>\r\n-        <div class=\"product-right\">\r\n-          <img :src=\"product.image\" :alt=\"product.name\" class=\"product-img\" />\r\n-          <button class=\"add-btn\" @click=\"addToCart(product)\">\r\n-            <span>+</span>\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-\r\n-    <!-- Sayfalama -->\r\n-    <div v-if=\"totalPages > 1\" class=\"pagination\">\r\n-      <button \r\n-        class=\"page-btn\" \r\n-        :disabled=\"currentPage === 1\"\r\n-        @click=\"currentPage = currentPage - 1\"\r\n-      >\r\n-        ← Önceki\r\n-      </button>\r\n-      \r\n-      <div class=\"page-numbers\">\r\n-        <button \r\n-          v-for=\"page in visiblePages\" \r\n-          :key=\"page\"\r\n-          :class=\"['page-number', { active: page === currentPage }]\"\r\n-          @click=\"currentPage = page\"\r\n-        >\r\n-          {{ page }}\r\n-        </button>\r\n-      </div>\r\n-      \r\n-      <button \r\n-        class=\"page-btn\" \r\n-        :disabled=\"currentPage === totalPages\"\r\n-        @click=\"currentPage = currentPage + 1\"\r\n-      >\r\n-        Sonraki →\r\n-      </button>\r\n-    </div>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script setup lang=\"ts\">\r\n-import { ref, computed, onMounted, watch } from 'vue'\r\n-import { useRouter } from 'vue-router'\r\n-import axios from 'axios'\r\n-import { useCartStore } from '@/stores/cart'\r\n-\r\n-const router = useRouter()\r\n-const cart = useCartStore()\r\n-\r\n-const products = ref<any[]>([])\r\n-const categories = ref<any[]>([])\r\n-const selectedCategoryId = ref<number | null>(null)\r\n-const search = ref('')\r\n-const currentPage = ref(1)\r\n-const itemsPerPage = 12\r\n-\r\n-// Kategori veya arama değiştiğinde sayfa numarasını sıfırla\r\n-watch([selectedCategoryId, search], () => {\r\n-  currentPage.value = 1\r\n-})\r\n-\r\n-onMounted(async () => {\r\n-  try {\r\n-    // Ürünleri ve kategorileri paralel olarak yükle\r\n-    const [productsResponse, categoriesResponse] = await Promise.all([\r\n-      axios.get('/backend/products'),\r\n-      axios.get('/backend/categories/main')\r\n-    ])\r\n-    \r\n-    products.value = productsResponse.data\r\n-    categories.value = categoriesResponse.data\r\n-    \r\n-    // İlk kategoriyi seç\r\n-    if (categories.value.length > 0) {\r\n-      selectedCategoryId.value = categories.value[0].id\r\n-    }\r\n-  } catch (error) {\r\n-    console.error('Veriler alınamadı:', error)\r\n-  }\r\n-})\r\n-\r\n-const selectCategory = (categoryId: number) => {\r\n-  selectedCategoryId.value = categoryId\r\n-}\r\n-\r\n-const filteredProducts = computed(() => {\r\n-  if (!products.value || !Array.isArray(products.value)) {\r\n-    return []\r\n-  }\r\n-  \r\n-  let filtered = products.value\r\n-  \r\n-  // Kategori filtresi\r\n-  if (selectedCategoryId.value) {\r\n-    filtered = filtered.filter(p => p.categoryId === selectedCategoryId.value)\r\n-  }\r\n-  \r\n-  // Arama filtresi\r\n-  if (search.value) {\r\n-    const searchLower = search.value.toLowerCase()\r\n-    filtered = filtered.filter(p => \r\n-      p.name.toLowerCase().includes(searchLower) || \r\n-      p.description.toLowerCase().includes(searchLower)\r\n-    )\r\n-  }\r\n-  \r\n-  return filtered\r\n-})\r\n-\r\n-const totalPages = computed(() => {\r\n-  return Math.ceil(filteredProducts.value.length / itemsPerPage)\r\n-})\r\n-\r\n-const visiblePages = computed(() => {\r\n-  const pages = []\r\n-  const maxVisible = 5\r\n-  const start = Math.max(1, currentPage.value - Math.floor(maxVisible / 2))\r\n-  const end = Math.min(totalPages.value, start + maxVisible - 1)\r\n-  \r\n-  for (let i = start; i <= end; i++) {\r\n-    pages.push(i)\r\n-  }\r\n-  return pages\r\n-})\r\n-\r\n-const paginatedProducts = computed(() => {\r\n-  if (!filteredProducts.value || !Array.isArray(filteredProducts.value)) {\r\n-    return []\r\n-  }\r\n-  const start = (currentPage.value - 1) * itemsPerPage\r\n-  const end = start + itemsPerPage\r\n-  return filteredProducts.value.slice(start, end)\r\n-})\r\n-\r\n-const addToCart = (product: any) => {\r\n-  cart.addToCart(product)\r\n-}\r\n-\r\n-const cleanDescription = (description: string) => {\r\n-  if (!description) return '';\r\n-  \r\n-  // HTML tag'lerini kaldır\r\n-  let cleanText = description.replace(/<[^>]*>/g, '');\r\n-  \r\n-  // HTML karakterlerini decode et\r\n-  cleanText = cleanText\r\n-    .replace(/&nbsp;/g, ' ')\r\n-    .replace(/&amp;/g, '&')\r\n-    .replace(/&lt;/g, '<')\r\n-    .replace(/&gt;/g, '>')\r\n-    .replace(/&quot;/g, '\"')\r\n-    .replace(/&#39;/g, \"'\");\r\n-  \r\n-  // Fazla boşlukları temizle\r\n-  cleanText = cleanText.replace(/\\s+/g, ' ').trim();\r\n-  \r\n-  // İlk 120 karakteri al ve \"...\" ekle\r\n-  if (cleanText.length > 120) {\r\n-    cleanText = cleanText.substring(0, 120) + '...';\r\n-  }\r\n-  \r\n-  return cleanText;\r\n-}\r\n-\r\n-const goToHome = () => {\r\n-  router.push('/')\r\n-}\r\n </script>\r\n \r\n <style scoped>\r\n .starbucks-page {\r\n"
                },
                {
                    "date": 1750636612254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,10 +216,11 @@\n   router.push('/')\r\n }\r\n \r\n const openCommentsModal = () => {\r\n-  // Implement the logic to open the comments modal\r\n-  console.log('Yorumları Gör clicked')\r\n+  // Emit an event to open comments modal\r\n+  const event = new CustomEvent('openCommentsModal')\r\n+  window.dispatchEvent(event)\r\n }\r\n </script>\r\n \r\n <style scoped>\r\n"
                },
                {
                    "date": 1750636625901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,24 +102,27 @@\n const selectedCategoryId = ref<number | null>(null)\r\n const search = ref('')\r\n const currentPage = ref(1)\r\n const itemsPerPage = 12\r\n+const ratingStats = ref({ averageRating: 4.95, totalComments: 1000 })\r\n \r\n // Kategori veya arama değiştiğinde sayfa numarasını sıfırla\r\n watch([selectedCategoryId, search], () => {\r\n   currentPage.value = 1\r\n })\r\n \r\n onMounted(async () => {\r\n   try {\r\n-    // Ürünleri ve kategorileri paralel olarak yükle\r\n-    const [productsResponse, categoriesResponse] = await Promise.all([\r\n+    // Ürünleri, kategorileri ve rating istatistiklerini paralel olarak yükle\r\n+    const [productsResponse, categoriesResponse, statsResponse] = await Promise.all([\r\n       axios.get('/backend/products'),\r\n-      axios.get('/backend/categories/main')\r\n+      axios.get('/backend/categories/main'),\r\n+      axios.get('/backend/comments/stats')\r\n     ])\r\n     \r\n     products.value = productsResponse.data\r\n     categories.value = categoriesResponse.data\r\n+    ratingStats.value = statsResponse.data\r\n     \r\n     // İlk kategoriyi seç\r\n     if (categories.value.length > 0) {\r\n       selectedCategoryId.value = categories.value[0].id\r\n"
                },
                {
                    "date": 1750636632250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n             <span class=\"delivery-info\">18,99 TL teslimat ücreti <b>500 TL sepete ücretsiz teslimat</b></span>\r\n             <span class=\"min-order\">Min. sepet tutarı 100 TL</span>\r\n           </div>\r\n           <div class=\"restaurant-rating\">\r\n-            <span class=\"star\">★</span> 4.95 (1000+)\r\n+            <span class=\"star\">★</span> {{ ratingStats.averageRating }} ({{ ratingStats.totalComments }}+)\r\n             <span class=\"reviews\" @click=\"openCommentsModal\">Yorumları Gör</span>\r\n             <span class=\"about\">Hakkında</span>\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1750637113625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n           </div>\r\n           <div class=\"restaurant-rating\">\r\n             <span class=\"star\">★</span> {{ ratingStats.averageRating }} ({{ ratingStats.totalComments }}+)\r\n             <span class=\"reviews\" @click=\"openCommentsModal\">Yorumları Gör</span>\r\n-            <span class=\"about\">Hakkında</span>\r\n+            <span class=\"about\" @click=\"openAboutModal\">Hakkında</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n@@ -223,8 +223,14 @@\n   // Emit an event to open comments modal\r\n   const event = new CustomEvent('openCommentsModal')\r\n   window.dispatchEvent(event)\r\n }\r\n+\r\n+const openAboutModal = () => {\r\n+  // Emit an event to open about modal\r\n+  const event = new CustomEvent('openAboutModal')\r\n+  window.dispatchEvent(event)\r\n+}\r\n </script>\r\n \r\n <style scoped>\r\n .starbucks-page {\r\n"
                }
            ],
            "date": 1750614688199,
            "name": "Commit-0",
            "content": "<template>\r\n  <div class=\"starbucks-page\">\r\n    <!-- Üst: Restoran Bilgi ve Slider Alanı -->\r\n    <div class=\"restaurant-header d-none d-md-block\">\r\n      <div class=\"restaurant-info\">\r\n        <img class=\"restaurant-logo\" src=\"/logogoksel.png\" alt=\"Goksel Manav\" />\r\n        <div class=\"restaurant-meta\">\r\n          <h1>GOKSEL MANAV</h1>\r\n          <div class=\"restaurant-details\">\r\n            <span class=\"delivery\">TESLİMAT</span>\r\n            <span class=\"delivery-info\">18,99 TL teslimat ücreti <b>500 TL sepete ücretsiz teslimat</b></span>\r\n            <span class=\"min-order\">Min. sepet tutarı 100 TL</span>\r\n          </div>\r\n          <div class=\"restaurant-rating\">\r\n            <span class=\"star\">★</span> 4.95 (1000+)\r\n            <span class=\"reviews\">Yorumları Gör</span>\r\n            <span class=\"about\">Hakkında</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"slider-area\">\r\n        <div class=\"slider-track\">\r\n          <div v-for=\"(img, i) in slideImages\" :key=\"i\" class=\"slider-item\">\r\n            <img :src=\"img\" alt=\"Ürün görseli\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Menüde Ara ve Tab Menü -->\r\n    <div class=\"menu-tabs-bar\">\r\n      <input type=\"text\" v-model=\"search\" class=\"menu-search\" placeholder=\"Menüde Ara\" />\r\n      <div class=\"menu-tabs\">\r\n        <div\r\n          v-for=\"category in categories\"\r\n          :key=\"category.id\"\r\n          :class=\"['menu-tab', { active: selectedCategoryId === category.id }]\"\r\n          @click=\"selectCategory(category.id)\"\r\n        >\r\n          {{ category.name }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Ürün Listesi -->\r\n    <div class=\"products-list\">\r\n      <div\r\n        v-for=\"product in paginatedProducts\"\r\n        :key=\"product.id\"\r\n        class=\"product-row\"\r\n      >\r\n        <div class=\"product-info\">\r\n          <div class=\"product-title\">{{ product.name }}</div>\r\n          <div class=\"product-price\">{{ product.price.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' }) }}</div>\r\n          <div class=\"product-desc\">{{ cleanDescription(product.description) }}</div>\r\n        </div>\r\n        <div class=\"product-right\">\r\n          <img :src=\"product.image\" :alt=\"product.name\" class=\"product-img\" />\r\n          <button class=\"add-btn\" @click=\"addToCart(product)\">\r\n            <span>+</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sayfalama -->\r\n    <div v-if=\"totalPages > 1\" class=\"pagination\">\r\n      <button \r\n        class=\"page-btn\" \r\n        :disabled=\"currentPage === 1\"\r\n        @click=\"currentPage = currentPage - 1\"\r\n      >\r\n        ← Önceki\r\n      </button>\r\n      \r\n      <div class=\"page-numbers\">\r\n        <button \r\n          v-for=\"page in visiblePages\" \r\n          :key=\"page\"\r\n          :class=\"['page-number', { active: page === currentPage }]\"\r\n          @click=\"currentPage = page\"\r\n        >\r\n          {{ page }}\r\n        </button>\r\n      </div>\r\n      \r\n      <button \r\n        class=\"page-btn\" \r\n        :disabled=\"currentPage === totalPages\"\r\n        @click=\"currentPage = currentPage + 1\"\r\n      >\r\n        Sonraki →\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\nimport axios from 'axios'\r\nimport { useCartStore } from '@/stores/cart'\r\n\r\nconst cart = useCartStore()\r\n\r\nconst products = ref<any[]>([])\r\nconst categories = ref<any[]>([])\r\nconst selectedCategoryId = ref<number | null>(null)\r\nconst search = ref('')\r\nconst currentPage = ref(1)\r\nconst itemsPerPage = 12\r\n\r\n// Kategori veya arama değiştiğinde sayfa numarasını sıfırla\r\nwatch([selectedCategoryId, search], () => {\r\n  currentPage.value = 1\r\n})\r\n\r\nonMounted(async () => {\r\n  try {\r\n    // Ürünleri ve kategorileri paralel olarak yükle\r\n    const [productsResponse, categoriesResponse] = await Promise.all([\r\n      axios.get('/backend/products'),\r\n      axios.get('/backend/categories/main')\r\n    ])\r\n    \r\n    products.value = productsResponse.data\r\n    categories.value = categoriesResponse.data\r\n    \r\n    // İlk kategoriyi seç\r\n    if (categories.value.length > 0) {\r\n      selectedCategoryId.value = categories.value[0].id\r\n    }\r\n  } catch (error) {\r\n    console.error('Veriler alınamadı:', error)\r\n  }\r\n})\r\n\r\nconst selectCategory = (categoryId: number) => {\r\n  selectedCategoryId.value = categoryId\r\n}\r\n\r\nconst slideImages = computed(() => {\r\n  if (!products.value || !Array.isArray(products.value)) {\r\n    return []\r\n  }\r\n  return products.value.map(p => p.image).filter(Boolean)\r\n})\r\n\r\nconst filteredProducts = computed(() => {\r\n  if (!products.value || !Array.isArray(products.value)) {\r\n    return []\r\n  }\r\n  \r\n  let filtered = products.value\r\n  \r\n  // Kategori filtresi\r\n  if (selectedCategoryId.value) {\r\n    filtered = filtered.filter(p => p.categoryId === selectedCategoryId.value)\r\n  }\r\n  \r\n  // Arama filtresi\r\n  if (search.value) {\r\n    const searchLower = search.value.toLowerCase()\r\n    filtered = filtered.filter(p => \r\n      p.name.toLowerCase().includes(searchLower) || \r\n      p.description.toLowerCase().includes(searchLower)\r\n    )\r\n  }\r\n  \r\n  return filtered\r\n})\r\n\r\nconst totalPages = computed(() => {\r\n  return Math.ceil(filteredProducts.value.length / itemsPerPage)\r\n})\r\n\r\nconst visiblePages = computed(() => {\r\n  const pages = []\r\n  const maxVisible = 5\r\n  const start = Math.max(1, currentPage.value - Math.floor(maxVisible / 2))\r\n  const end = Math.min(totalPages.value, start + maxVisible - 1)\r\n  \r\n  for (let i = start; i <= end; i++) {\r\n    pages.push(i)\r\n  }\r\n  return pages\r\n})\r\n\r\nconst paginatedProducts = computed(() => {\r\n  if (!filteredProducts.value || !Array.isArray(filteredProducts.value)) {\r\n    return []\r\n  }\r\n  const start = (currentPage.value - 1) * itemsPerPage\r\n  const end = start + itemsPerPage\r\n  return filteredProducts.value.slice(start, end)\r\n})\r\n\r\nconst addToCart = (product: any) => {\r\n  cart.addToCart(product)\r\n}\r\n\r\nconst cleanDescription = (description: string) => {\r\n  if (!description) return '';\r\n  \r\n  // HTML tag'lerini kaldır\r\n  let cleanText = description.replace(/<[^>]*>/g, '');\r\n  \r\n  // HTML karakterlerini decode et\r\n  cleanText = cleanText\r\n    .replace(/&nbsp;/g, ' ')\r\n    .replace(/&amp;/g, '&')\r\n    .replace(/&lt;/g, '<')\r\n    .replace(/&gt;/g, '>')\r\n    .replace(/&quot;/g, '\"')\r\n    .replace(/&#39;/g, \"'\");\r\n  \r\n  // Fazla boşlukları temizle\r\n  cleanText = cleanText.replace(/\\s+/g, ' ').trim();\r\n  \r\n  // İlk 120 karakteri al ve \"...\" ekle\r\n  if (cleanText.length > 120) {\r\n    cleanText = cleanText.substring(0, 120) + '...';\r\n  }\r\n  \r\n  return cleanText;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.starbucks-page {\r\n  margin: 0 auto;\r\n  padding: 2rem 1rem 3rem 1rem;\r\n}\r\n.restaurant-header {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n.restaurant-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n}\r\n.restaurant-logo {\r\n  width: 90px;\r\n  height: 90px;\r\n  border-radius: 16px;\r\n  background: #fff;\r\n  object-fit: contain;\r\n  border: 1px solid #eee;\r\n}\r\n.restaurant-meta h1 {\r\n  font-size: 2.1rem;\r\n  font-weight: 700;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.restaurant-details {\r\n  color: #444;\r\n  font-size: 1rem;\r\n  margin-bottom: 0.3rem;\r\n}\r\n.delivery {\r\n  color: #e52929;\r\n  font-weight: 600;\r\n  margin-right: 0.7rem;\r\n}\r\n.delivery-info {\r\n  color: #e52929;\r\n  font-weight: 500;\r\n  margin-right: 0.7rem;\r\n}\r\n.min-order {\r\n  color: #888;\r\n}\r\n.restaurant-rating {\r\n  color: #e52929;\r\n  font-size: 1rem;\r\n  margin-top: 0.2rem;\r\n}\r\n.restaurant-rating .star {\r\n  color: #f7b500;\r\n  font-size: 1.1rem;\r\n  margin-right: 0.2rem;\r\n}\r\n.restaurant-rating .reviews, .restaurant-rating .about {\r\n  color: #444;\r\n  margin-left: 1.2rem;\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n  font-size: 0.98rem;\r\n}\r\n.slider-area {\r\n  flex: 1;\r\n  min-width: 200px;\r\n  max-width: 350px;\r\n  height: 38px;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  border-radius: 12px;\r\n  background: #f7f7f7;\r\n  box-shadow: 0 1px 4px rgba(0,0,0,0.04);\r\n}\r\n.slider-track {\r\n  display: flex;\r\n  animation: slide-left 12s linear infinite;\r\n  gap: 1.5rem;\r\n}\r\n.slider-item img {\r\n  height: 36px;\r\n  width: auto;\r\n  border-radius: 8px;\r\n  object-fit: cover;\r\n}\r\n@keyframes slide-left {\r\n  0% { transform: translateX(0); }\r\n  100% { transform: translateX(-60%); }\r\n}\r\n.menu-tabs-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n.menu-search {\r\n  padding: 0.7rem 1.2rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  min-width: 220px;\r\n}\r\n.menu-tabs {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.menu-tab {\r\n  padding: 0.7rem 1.3rem;\r\n  border-radius: 20px;\r\n  background: #f7f7f7;\r\n  color: #444;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background 0.2s, color 0.2s;\r\n  font-size: 1rem;\r\n}\r\n.menu-tab.active {\r\n  background: #e52929;\r\n  color: #fff;\r\n}\r\n.products-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 1.2rem;\r\n}\r\n@media (max-width: 1100px) {\r\n  .products-list {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n}\r\n@media (max-width: 700px) {\r\n  .products-list {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n.product-row {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #fff;\r\n  border-radius: 14px;\r\n  box-shadow: 0 1px 4px rgba(0,0,0,0.04);\r\n  padding: 1.2rem 1.5rem;\r\n  gap: 1.5rem;\r\n  min-width: 0;\r\n}\r\n.product-info {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n.product-title {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  margin-bottom: 0.2rem;\r\n}\r\n.product-price {\r\n  color: #e52929;\r\n  font-weight: 700;\r\n  margin-bottom: 0.3rem;\r\n}\r\n.product-desc {\r\n  color: #666;\r\n  font-size: 0.95rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.product-right {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n.product-img {\r\n  width: 64px;\r\n  height: 64px;\r\n  border-radius: 10px;\r\n  object-fit: cover;\r\n  background: #eee;\r\n}\r\n.add-btn {\r\n  background: #fff;\r\n  border: 2px solid #e52929;\r\n  color: #e52929;\r\n  border-radius: 50%;\r\n  width: 38px;\r\n  height: 38px;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: background 0.2s, color 0.2s;\r\n}\r\n.add-btn:hover {\r\n  background: #e52929;\r\n  color: #fff;\r\n}\r\n@media (max-width: 900px) {\r\n  .starbucks-page {\r\n    padding: 1rem 0.2rem 2rem 0.2rem;\r\n  }\r\n  .restaurant-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n  }\r\n  .slider-area {\r\n    max-width: 100%;\r\n    width: 100%;\r\n  }\r\n  .menu-tabs-bar {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  .product-row {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n    padding: 1rem;\r\n  }\r\n  .product-right {\r\n    align-self: flex-end;\r\n  }\r\n}\r\n.pagination {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-top: 1.5rem;\r\n}\r\n.page-btn {\r\n  padding: 0.7rem 1.2rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background: #fff;\r\n  color: #444;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background 0.2s, color 0.2s;\r\n}\r\n.page-btn:hover {\r\n  background: #e52929;\r\n  color: #fff;\r\n}\r\n.page-numbers {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.page-number {\r\n  padding: 0.7rem 1.2rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background: #fff;\r\n  color: #444;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background 0.2s, color 0.2s;\r\n}\r\n.page-number.active {\r\n  background: #e52929;\r\n  color: #fff;\r\n}\r\n</style> "
        }
    ]
}