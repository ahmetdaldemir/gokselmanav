version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gokselmanav-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: gokselmanav_db
      POSTGRES_USER: gokselmanav_user
      POSTGRES_PASSWORD: gokselmanav_password_2024
      PGDATA: /var/lib/postgresql/data/pgdata
      # Production optimizations
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "127.0.0.1:5432:5432"  # Only local access for security
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/backups:/backups
    networks:
      - gokselmanav-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gokselmanav_user -d gokselmanav_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Production resource limits
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gokselmanav-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gokselmanav.com
      PGADMIN_DEFAULT_PASSWORD: admin_password_2024
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "127.0.0.1:8080:80"  # Only local access for security
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - gokselmanav-network
    depends_on:
      postgres:
        condition: service_healthy
    # Production resource limits
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  gokselmanav-network:
    driver: bridge 